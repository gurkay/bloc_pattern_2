name: bloc_pattern_2
description: A new Flutter project.

publish_to: 'none'

version: 1.0.0+1

environment:
  sdk: '>=3.0.2 <4.0.0'

dependencies:
  flutter:
    sdk: flutter

  # flutter.dev
  # Default icons asset for Cupertino widgets based on Apple styled icons
  cupertino_icons: ^1.0.2

  # A Dart package that helps to implement value based equality 
  # without needing to explicitly override == and hashCode.
  equatable: ^2.0.5

  # An extension to the bloc state management library which
  # automatically persists and restores bloc states.
  hydrated_bloc: ^9.1.1

  # Flutter plugin for getting commonly used locations on host 
  # platform file systems, such as the temp and app data directories.
  path_provider: ^2.0.15

  # Flutter Widgets that make it easy to implement the 
  # BLoC (Business Logic Component) design pattern. 
  # Built to be used with the bloc state management package.
  flutter_bloc: ^8.1.3

  # A unified form representation in Dart which aims to 
  # simplify form representation and validation in a generic way.
  formz: ^0.6.0

  # google.dev
  # Classes and helper functions that support
  # JSON code generation via the `json_serializable` package.
  json_annotation: ^4.8.1

  # A powerful HTTP networking package, supports
  # Interceptors, Aborting and canceling a request, 
  # Custom adapters, Transformers, etc.
  dio: ^5.2.1+1
  
  # A collection of loading
  # indicators animated with flutter
  flutter_spinkit: ^5.2.0

  # flutter.dev
  # Flutter plugin for launching a URL. Supports 
  # web, phone, SMS, and email schemes.
  url_launcher: ^6.1.12

  # Flutter plugin for reading and writing simple 
  # key-value pairs. Wraps NSUserDefaults on iOS and 
  # SharedPreferences on Android.
  shared_preferences: ^2.2.1

  # Flutter Secure Storage provides API to store data 
  # in secure storage. Keychain is used in iOS, KeyStore
  # based solution is used in Android.
  flutter_secure_storage: ^9.0.0



dev_dependencies:
  flutter_test:
    sdk: flutter

  # Recommended lints for Flutter apps, packages, and plugins to 
  # encourage good coding practices
  flutter_lints: ^2.0.0

  # Automatically generate code for converting to and from JSON 
  # by annotating Dart classes.
  json_serializable: ^6.7.1

  #A build system for Dart code generation and modular compilation.
  build_runner: ^2.4.5

flutter:

  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/imgs/
    - assets/png/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
